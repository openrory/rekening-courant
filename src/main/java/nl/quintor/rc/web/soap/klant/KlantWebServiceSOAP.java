
package nl.quintor.rc.web.soap.klant;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "KlantWebServiceSOAP", targetNamespace = "http://klant.soap.web.rc.quintor.nl/", wsdlLocation = "file:/Volumes/Data/Development/views/quintor/masterclass/JavaMasterclass/rc-backend/src/main/resources/xsd/klantDocument.wsdl")
public class KlantWebServiceSOAP
    extends Service
{

    private final static URL KLANTWEBSERVICESOAP_WSDL_LOCATION;
    private final static WebServiceException KLANTWEBSERVICESOAP_EXCEPTION;
    private final static QName KLANTWEBSERVICESOAP_QNAME = new QName("http://klant.soap.web.rc.quintor.nl/", "KlantWebServiceSOAP");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/Volumes/Data/Development/views/quintor/masterclass/JavaMasterclass/rc-backend/src/main/resources/xsd/klantDocument.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        KLANTWEBSERVICESOAP_WSDL_LOCATION = url;
        KLANTWEBSERVICESOAP_EXCEPTION = e;
    }

    public KlantWebServiceSOAP() {
        super(__getWsdlLocation(), KLANTWEBSERVICESOAP_QNAME);
    }

    public KlantWebServiceSOAP(WebServiceFeature... features) {
        super(__getWsdlLocation(), KLANTWEBSERVICESOAP_QNAME, features);
    }

    public KlantWebServiceSOAP(URL wsdlLocation) {
        super(wsdlLocation, KLANTWEBSERVICESOAP_QNAME);
    }

    public KlantWebServiceSOAP(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, KLANTWEBSERVICESOAP_QNAME, features);
    }

    public KlantWebServiceSOAP(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public KlantWebServiceSOAP(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns KlantWebService
     */
    @WebEndpoint(name = "KlantDocumentPort")
    public KlantWebService getKlantDocumentPort() {
        return super.getPort(new QName("http://klant.soap.web.rc.quintor.nl/", "KlantDocumentPort"), KlantWebService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns KlantWebService
     */
    @WebEndpoint(name = "KlantDocumentPort")
    public KlantWebService getKlantDocumentPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://klant.soap.web.rc.quintor.nl/", "KlantDocumentPort"), KlantWebService.class, features);
    }

    private static URL __getWsdlLocation() {
        if (KLANTWEBSERVICESOAP_EXCEPTION!= null) {
            throw KLANTWEBSERVICESOAP_EXCEPTION;
        }
        return KLANTWEBSERVICESOAP_WSDL_LOCATION;
    }

}
